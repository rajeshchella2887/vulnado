include:
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Jobs/License-Scanning.gitlab-ci.yml
  - template: Jobs/Secret-Detection.gitlab-ci.yml
variables:
  SECURE_ANALYZERS_PREFIX: "harbor.rke.pandora.com/gitlab"
  SCAN_KUBERNETES_MANIFESTS: "true"

stages:
- Remote-Check-Out
- test
- SonarQube-Scanning
- Sonarqube-Vulnerability-Report
- Check-Quality-Gate

Remote-Check-Out:
  stage: Remote-Check-Out
  image: docker:19.03.12
  script:
    - pwd


# Sast-Scan:
#   stage: Sast-Scan
#   image: registry.gitlab.com/gitlab-org/security-products/analyzers/semgrep
#   script:
#     - echo "sast scan"
#     # - semgrep --config=p/security-audit --json Build_Pipeline
#   artifacts:
#     reports:
#       sast: gl-sast-report.json
#

SonarQube-Scanning:
  stage: SonarQube-Scanning
  image: 
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop

Sonarqube-Vulnerability-Report:
  stage: Sonarqube-Vulnerability-Report
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=infinity&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
  artifacts:
    expire_in: 10 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - SonarQube-Scanning